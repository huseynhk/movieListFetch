{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETAP\\\\Desktop\\\\IMDB-clone-ReactApp-master\\\\src\\\\components\\\\card\\\\card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport \"./card.css\";\nimport { Link } from \"react-router-dom\"; //https://skeletonreact.com/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cards = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1500);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: /*#__PURE__*/_jsxDEV(SkeletonTheme, {\n        color: \"blue\",\n        highlightColor: \"black\",\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"circular\",\n          height: 400,\n          width: 300,\n          duration: 1.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: `/movie/${movie.id}`,\n      style: {\n        color: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cards__img\",\n          src: `https://image.tmdb.org/t/p/original${movie ? movie.poster_path : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards__overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__title\",\n            children: movie ? movie.original_title : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__runtime\",\n            children: [movie ? movie.release_date : \"\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card__rating\",\n              children: [\" IMDB \", movie ? movie.vote_average : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__description\",\n            children: movie ? movie.overview.slice(0, 40) + \"...\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cards, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/SETAP/Desktop/IMDB-clone-ReactApp-master/src/components/card/card.js"],"names":["React","useEffect","useState","Skeleton","SkeletonTheme","Link","Cards","movie","isLoading","setIsLoading","setTimeout","id","color","poster_path","original_title","release_date","vote_average","overview","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,IAAmBC,aAAnB,QAAwC,wBAAxC;AACA,OAAO,YAAP;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;;;;AACA,MAAMC,KAAK,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAEvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKA,sBAAO;AAAA,cAEHD,SAAS,gBAET;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,MAArB;AAA4B,QAAA,cAAc,EAAC,OAA3C;AAAA,+BAEI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAC,UAAlB;AAA6B,UAAA,MAAM,EAAE,GAArC;AAA0C,UAAA,KAAK,EAAE,GAAjD;AAAsD,UAAA,QAAQ,EAAE;AAAhE;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFS,gBAUT,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASD,KAAK,CAACI,EAAG,EAA7B;AAAgC,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAvC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAG,sCAAqCL,KAAK,GAAGA,KAAK,CAACM,WAAT,GAAqB,EAAG;AAApG;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BN,KAAK,GAAGA,KAAK,CAACO,cAAT,GAAwB;AAA3D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,uBACKP,KAAK,GAAGA,KAAK,CAACQ,YAAT,GAAsB,EADhC,eAEI;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,mCAAsCR,KAAK,GAAGA,KAAK,CAACS,YAAT,GAAsB,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,sBAAoCT,KAAK,GAAGA,KAAK,CAACU,QAAN,CAAeC,KAAf,CAAqB,CAArB,EAAuB,EAAvB,IAA2B,KAA9B,GAAsC;AAA/E;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAZG,mBAAP;AA4BH,CArCD;;GAAMZ,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\"\nimport \"./card.css\"\nimport { Link } from \"react-router-dom\"\n//https://skeletonreact.com/\nconst Cards = ({movie}) => {\n\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        setTimeout(() => {\n            setIsLoading(false)\n        }, 1500)\n    }, []) \n    return <>\n    {\n        isLoading\n        ?\n        <div className=\"cards\">\n            <SkeletonTheme color=\"blue\" highlightColor=\"black\"> \n            {/* // refresh eliyende deyisen rengler */}\n                <Skeleton variant=\"circular\" height={400} width={300} duration={1.5} />\n            </SkeletonTheme>\n        </div>\n\n        :\n        <Link to={`/movie/${movie.id}`} style={{color:\"white\"}}>\n            <div className=\"cards\">\n            {/* https://image.tmdb.org/t/p/original/a4I481szRmycyreQTLrRe4f4YJe.jpg */}\n                <img className=\"cards__img\" src={`https://image.tmdb.org/t/p/original${movie ? movie.poster_path:\"\"}`} />\n                <div className=\"cards__overlay\">\n                    <div className=\"card__title\">{movie ? movie.original_title:\"\"}</div>\n                    <div className=\"card__runtime\">\n                        {movie ? movie.release_date:\"\"}\n                        <span className=\"card__rating\"> IMDB {movie ? movie.vote_average:\"\"}</span>\n                    </div>\n                    <div className=\"card__description\">{movie ? movie.overview.slice(0,40)+\"...\" : \"\"}</div>\n                </div>\n            </div>\n        </Link>\n    }\n    </>\n}\n\nexport default Cards"]},"metadata":{},"sourceType":"module"}